{"version":3,"sources":["components/Alert.js","components/NAVBAR.js","components/Textforms.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","NAVBAR","mode","href","title","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","htmlfor","Textforms","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newtext","showAlert","navigator","clipboard","writeText","document","getSelection","removeAllRanges","split","join","filter","element","string","isRequired","aboutText","App","setalert","message","setTimeout","_useState3","_useState4","setMode","components_NAVBAR","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.89a4607b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n\r\n    }\r\n  return (\r\n    <div  style={{height:'60px'}}>\r\n\r\n\r\n      {props.alert &&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize (props.alert.type)} </strong> :{props.alert.msg} \r\n   \r\n   \r\n </div>}\r\n\r\n\r\n    </div>\r\n     \r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport props from 'prop-types'\r\n\r\nconst NAVBAR = (props) => {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 \">\r\n    </ul>\r\n  \r\n\r\n<div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label `}  htmlfor=\"flexSwitchCheckDefault\" >Enable {`${props.mode ==='light'?'dark':'light'}`} mode</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NAVBAR\r\n\r\nNAVBAR.props={\r\n  title:props.string.isRequired,\r\n      aboutText:props.string\r\n        }","import React, { useState } from 'react';\r\n\r\n\r\nexport default function Textforms(props) {\r\n  const handleUpClick=()=>{\r\n    console.log(\"upper was click\"+text)\r\n    let newtext=text.toUpperCase();\r\n    setText(newtext)\r\n    props.showAlert(\"converted to UPPERCASE!\",\"success\");\r\n  }\r\n  const handleLoClick=()=>{\r\n    console.log(\"lower was click\"+text)\r\n    let newtext=text.toLowerCase();\r\n    setText(newtext)\r\n    props.showAlert(\"converted to LOWERCASE!\",\"success\");\r\n  }\r\n  const handleClearClick=()=>{\r\n    console.log(\"Clear was click\"+text)\r\n    let newtext=\" \";\r\n    setText(newtext)\r\n    props.showAlert(\"Clear all Text\",\"success\");\r\n  }\r\n  const handleOnChange=(event)=>{\r\n    console.log(\"upper was click\");\r\n   \r\n    setText(event.target.value);\r\n\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n  //text=\"new text\";//wrong way to change the state\r\n  //setText(\"new text\");//correct way to change the state\r\n  const handleCopy=()=>{\r\n    console.log(\"copied\");\r\n    // var text=document.getElementById(\"myBox\");\r\n    //  text.select();\r\n     //navigator.clipboard.writeText(text.value);\r\n     navigator.clipboard.writeText(text);\r\n     document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied the data!\",\"success\");\r\n  }\r\n  const handleExtraspacesClick = ()=>{\r\n    let newtext=text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"))\r\n    props.showAlert(\"Remove All the ExtraSpaces\",\"success\");\r\n  }\r\n  return (\r\n    <>\r\n    <div className='container'  style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h2 className='mb-4'>\r\n        {props.heading}\r\n      </h2>\r\n\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white' ,color:props.mode==='dark'?'white':'#042743'}}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} type=\"button\"  className=\"btn btn-dark mx-2 my-2\"onClick={handleUpClick}>Convert to uppercase</button>\r\n      <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-2 my-2\"onClick={handleLoClick}>Convert to Lowercase</button>\r\n      <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-2 my-2\" onClick={handleClearClick}>Clear </button>\r\n      <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-2 my-2\" onClick={handleCopy}>Copy Text </button>\r\n      \r\n      <button disabled={text.length===0} type=\"button\" className=\"btn btn-dark mx-2 my-2\" onClick={handleExtraspacesClick}>Remove Extra Spaces </button>\r\n      \r\n     \r\n     \r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\r\n      <h1>your text summary</h1>\r\n      <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length } words and {text.length} characters</p>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length *.008} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\n\nimport Alert from './components/Alert';\nimport NAVBAR from './components/NAVBAR';\nimport Textforms from './components/Textforms'\n\n\n\n\n\nfunction App() {\n  const [alert, setalert] = useState(null);\n   const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n   }\n  const [mode, setMode] = useState('light')//whether dark mode is enable or not\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title='TextUtils-Dark Mode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n      document.title='TextUtils-Light Mode'\n    }\n  }\n   \n\n\n\n\n  return (\n   <>\n     {/* <Router> */}\n   <NAVBAR title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n  <Alert alert={alert} />\n  \n  \n   <div className=\"container mb-3\">\n  \n\n   \n          \n   {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} /> */}\n          {/* </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n      <Textforms showAlert={showAlert} heading=\"Try TextUtils-Word counter,character Counter,Remove Extra spaces \" mode={mode}/>\n            \n          {/* </Route> */}\n        {/* </Switch> */}\n         \n          \n           \n        \n\n  \n  \n   </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}